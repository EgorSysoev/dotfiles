# vim: ft=sh
# ENVIRONMENT VARIABLES #
#########################

# Determine if we're in WSL distro
export WSL=`(uname -a | grep -q "Microsoft") && 'true'`

# No brainer, default to Vim
export EDITOR="vim"

# Tmux auto title
export DISABLE_AUTO_TITLE="true"

# Color LS output to differentiate between directories and files
export LS_OPTIONS="--color=auto"
export CLICOLOR="Yes"
export LSCOLOR=""

# Set Path
export PATH=$HOME/.bin:$HOME/bin:$HOME/.local/bin:$HOME/.yarn/bin:/usr/local/sbin:/usr/local/bin:/sbin:$PATH

# GOPATH
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export GODIR=$GOPATH/src/github.com/keiththomps
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export PATH=$GOBIN:$PATH

alias gopath="cd $GOPATH"
alias godir="cd $GODIR"
alias gosrc="cd $GOPATH/src"

# Elixir/Erlang Configuration
export ERL_AFLAGS="-kernel shell_history enabled"

# Add Rust/Cargo to the path
export PATH="$HOME/.cargo/bin:$PATH"
if [[ -s $HOME/.cargo/env ]] ; then
  source $HOME/.cargo/env
fi

# Configure chruby
if [[ -s /usr/local/share/chruby/chruby.sh ]] ; then
  source /usr/local/share/chruby/chruby.sh
  source /usr/local/share/chruby/auto.sh

  chruby $(cat $HOME/.ruby-version)
fi

# Configure direnv
eval "$(direnv hook $SHELL)"

# ALIASES #
###########

# Standard Shell
alias c='clear'
alias l='ls -al'
alias bloat='du -k | sort -nr | more'
alias brokensym='find . -type l ! -exec test -e {} \; -print'
alias bsym='brokensym'
alias rbsym='find . -type l ! -exec test -e {} \; -print | xargs rm'

# Alias Vim to Neovim
alias vim='nvim'

# Bundle Exec
alias be="bundle exec"

# Git
alias g='git status -s'
alias ga='git add'
alias gb='git branch'
alias gc='git commit -m'
alias gca='git commit -am'
alias gco='git checkout'
alias gcob='git checkout -b'
alias grpr='git remote prune origin'
alias gl='git log --oneline --graph'
alias gla='git log --oneline --graph --all'

# tmux
alias attach='tmux attach-session -t'
alias switch='tmux switch-session -t'
alias tmk='tmux kill-session -t'
alias tls='tmux ls'
alias load='tmuxp load'

# Windows Subsystem for Linux Specific Aliases
if ($WSL)
then
  alias docker='docker.exe'
  alias docker-compose='docker-compose.exe'
if

# Docker
alias de='docker exec'
alias dclean='docker ps -a -q -f status=exited | xargs -t docker rm'
alias diclean='docker images -q -f dangling=true | xargs -t docker rmi'
alias dvclean='docker volume ls -q -f dangling=true | xargs -t docker volume rm'
alias dgc='dclean && diclean && dvclean'
alias dps='docker ps'
alias dstop='docker stop `docker ps -q`'

# Docker Compose
alias dc='docker-compose'
alias dcu='docker-compose up'
alias dcr='docker-compose run --rm'

# Docker Machine
alias dm='docker-machine'

# Quickly enter docker-compose container
dce() {
  WORKSPACE=${PWD##*/}
  docker exec -it $(echo $WORKSPACE | tr -d _ | tr -d -)_${1}_1 bash
}

alias dapp='dce app'

# Expose Docker environment variables by default if `default` machine is running. Only macOS
if (uname -a | grep -q 'Darwin'); then
  if [ "$(docker-machine status default)" == "Running" ]; then
    eval $(docker-machine env default)
  fi
fi

# Flush DNS Cache
alias dnsflush='dscacheutil -flushcache; sudo killall -HUP mDNSResponder'

# Reload SHELL
alias r='exec $SHELL'

# Tmux project orchestration
rdev() {
  WORKSPACE=$1 tmuxp load ~/.tmuxp/rails_dev.yaml
}

if ($WSL)
then
  # SSH Agent Setup
  SSH_ENV=$HOME/.ssh/environment
  
  # start the ssh-agent
  start_agent() {
      echo "Initializing new SSH agent..."
      # spawn ssh-agent
      /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
      echo succeeded
      chmod 600 "${SSH_ENV}"
      . "${SSH_ENV}" > /dev/null
      /usr/bin/ssh-add
  }
  
  if [ -f "${SSH_ENV}" ]; then
       . "${SSH_ENV}" > /dev/null
       ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
          start_agent;
      }
  else
      start_agent;
  fi
fi
